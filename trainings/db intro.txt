ডাটাবেজ
------------------
ডাটাবেজ হল একটি কম্পিউটার প্রোগ্রাম যা ব্যবহার করে সহজে ডাটা সংরক্ষন ও সংরক্ষিত ডাটা বিভিন্নভাবে ব্যবহার করা যায়।
ডাটাবেজ প্রোগ্রামে সংরক্ষিত ডাটা সাধারণ ভাবে খাতায় টেবিল এঁকে যেভাবে ডাটা সংরক্ষন করা হয় সেভাবে কল্পনা করা যায়। যেমন 

একজন শিক্ষার্থীর ডাটা নিচের মত হতে পারে।

টেবিলের নামঃ Students Information
+------------+-------+------------+---------+----------+-------+---------+
| Student ID | Name  | Department | Session | Building | Floor | Room No |
+------------+-------+------------+---------+----------+-------+---------+
| 1109023    | Mr A  | CSE        | 2011-12 | 2nd      | 3rd   | 302     |
+------------+-------+------------+---------+----------+-------+---------+
| 1204571    | Mis B | CSE        | 2011-12 | 2nd      | 3rd   | 302     |
+------------+-------+------------+---------+----------+-------+---------+
| 1353211    | Mr D  | ETE        | 2013-14 | 2nd      | 4th   | 402     |
+------------+-------+------------+---------+----------+-------+---------+

একটি ডাটাবেজে একাধিক টেবিল থাকে।  
ডাটাবেজের ভাষায় টেবিলকে Entity/Collection/Table বলা হয়। 
কলামগুলোকে বলা হয় Field/Attribute/Property
রোগুলোকে বলা হয় Record/Document/Object

ডিজাইন এর ক্ষেত্রে বিবেচনায় রাখতে হবে যেনঃ
>>ডাটা পুনরাবৃত্তি না করা।
>>ডাটা ব্যবহারের সময় কম সময়ে খুজে পাওয়া যায়

ধরা যাক একটি শিক্ষা প্রতিষ্ঠানের শিক্ষার্থীদের তথ্য সংরক্ষনের জন্য একটি ডাটাবেজ ডিজাইন করতে হবে।

শিক্ষার্থীদের তথ্য নিচের মত করে একটি টেবিলেই রাখা যায়। 

টেবিলের নামঃ Students Information
+------------+-------+------------+---------+----------+-------+---------+
| Student ID | Name  | Department | Session | Building | Floor | Room No |
+------------+-------+------------+---------+----------+-------+---------+
| 1109023    | Mr A  | CSE        | 2011-12 | 2nd      | 3rd   | 302     |
+------------+-------+------------+---------+----------+-------+---------+
| 1204571    | Mis B | CSE        | 2011-12 | 2nd      | 3rd   | 302     |
+------------+-------+------------+---------+----------+-------+---------+
| 1353211    | Mr D  | ETE        | 2013-14 | 2nd      | 4th   | 402     |
+------------+-------+------------+---------+----------+-------+---------+

উপরের মত সব তথ্য এক টেবিলে থাকার ফলে দ্রুত খুজে পাওয়া যায়। কিন্তু অসুবিধা হল ডাটা পুনরাবৃত্তি হয়। যার ফলে মেমরিতে বেশী জায়গা প্রয়োজন হয়। কোন কিছু পরিবর্তনের প্রয়োজন হলে সবগুলো পরিবর্তন করতে হয় ।

আবার নিচের মত করেও রাখা যায়।
টেবিলের নামঃ Students Information
+------------+-------+---------+----------------+
| Student ID | Name  | Session | Dept Record Id |
+------------+-------+---------+----------------+
| 1109023    | Mr A  | 2011-12 | 1              |
+------------+-------+---------+----------------+
| 1204571    | Mis B | 2011-12 | 1              |
+------------+-------+---------+----------------+
| 1353211    | Mr D  | 2013-14 | 2              |
+------------+-------+---------+----------------+
	

টেবিলের নামঃ Department Information
+----------------+-----------+----------+-------+---------+
| Dept Record Id | Dept Name | Building | Floor | Room No |
+----------------+-----------+----------+-------+---------+
| 1              | CSE       |      2nd |   3rd |     302 |
+----------------+-----------+----------+-------+---------+
| 2              | ETE       |      2nd |   4th |     402 |
+----------------+-----------+----------+-------+---------+	

উপরে শিক্ষার্থী ও ডিপার্টমেন্টের তথ্য আলাদা টেবিলে রাখা হয়েছে। এরপর টেবিল দুটির মাঝে সম্পর্ক তৈরি করে দেয়া হয়েছে। 

এভাবে রাখার সুবিধা হল তথ্যের পুনরাবৃত্তি হয়না। কিন্তু এখন ব্যবহারের সময় দুটি টেবিল খুজতে হবে ফলে সময় বেশি লাগবে।

ডাটাবেজ ডিজাইনের সময় এই দুটির মাঝে সমঝোতা বা Balance করতে হয়।

কোন তথ্য খুজে পেতে বা একাধিক টেবিলের মাঝে সম্পর্ক তৈরি করতে প্রত্যেকটা রেকর্ডকে আলাদা করে সনাক্ত করার প্রয়োজন হয়। যে কলামের মাধ্যমে প্রত্যেকটা রেকর্ডকে আলাদা ভাবে সনাক্ত করা যায় সেই কলামটাকে Primary Key বলা হয়। যেমনঃ উপরের টেবিলের নামঃ Department Information টেবিলে Primary Key হল Dept Record Id।

একাধিক টেবিলের মধ্যে সম্পর্ক তৈরির সময় যখন একটি টেবিলের Primary Key অন্য টেবিলে ব্যবহার করা হয় তখন Primary কে বলা হয় Foreign Key। যেমন Students Information টেবিলে Dept Record Id হল Foreign Key.

ডাটার পুনরাবৃত্তি এড়াতে ডাটা আলাদা টেবিলে রেখে টেবিলগুলোর মাঝে সম্পর্ক তৈরি করে দেয়া হয়। এই সম্পর্ক গুলো তিন ধরণের হয়।

1 to 1
একটি টেবিলের একটি রেকর্ডের সাথে অন্য একটি টেবিলের একটি রেকর্ডের সম্পর্ক থাকে।
যেমনঃ একজন শিক্ষার্থীর ব্যক্তিগত তথ্য Personal(Roll, Name, father Name, mother Name) এবং যোগাযোগের তথ্য Contact(Roll, City, Post Code, Upozilla, Word) এগুলোর মাঝে সম্পর্ক। 

1 to many বা Many to 1
একটি টেবিলের একটি রেকর্ডের সাথে অন্য একটি টেবিলের একাধিক রেকর্ডের সম্পর্ক থাকে।
যেমনঃ শিক্ষার্থী ও ডিপার্টমেন্টের তথ্যের মধ্যে সম্পর্ক। একটি ডিপার্টমেন্টে একাধিক শিক্ষার্থী থাকে।

Many to Many
একটি টেবিলের একাধিক রেকর্ডের সাথে অন্য একটি টেবিলের একাধিক রেকর্ডের সম্পর্ক থাকে।
শিক্ষার্থী ও কোর্সের তথ্যের মাঝে সম্পর্ক। একজন শিক্ষার্থী একাধিক কোর্স করে। আবার একটি কোর্স একাধিক শিক্ষার্থী করে। 

কোন প্রোজেক্টের এর জন্য ডাটাবেজ তৈরির ক্ষেত্রে নিচের কাজগুলো করতে হয়।
1. প্রথমে বিভিন্ন চিত্রের মাধ্যমে ডাটাবেজের একটি নকশা তৈরি করা।
2. এরপর কোডের মাধ্যমে নকশার ডাটাবেজ নির্দিষ্ট ডাটাবেজ সিস্টেম বাস্তবায়ন করা।


ডাটাবেজ এর নকশা তৈরি
------------------------------------------
একটি প্রোজেক্টে কি কি ডাটা থাকবে এবং ডাটাগুলোর মাঝে সম্পর্ক কেমন হবে সেটা চিত্রের মাধ্যমে প্রকাশ করা হয়। এই চিত্রকে বলা হয় Entity Relationship Diagram বা ERD.


বিস্তারিত erd intro.txt ফাইলে।


ERD নকশা ডাটাবেজ সিস্টেমে বাস্তবায়ন করা
-----------------------------------------------------------------
ডাটাবেজ সিস্টেমের উপর ভিত্তি করে বাস্তবায়ন ভিন্ন ভিন্ন হয়ে থাকে। প্রতিটি ডাটাবেজ সিস্টেমের নিজস্ব
একটি ভাষা থাকে যার মাধ্যমে ডাটাবেজ সিস্টেমে কম্যান্ড প্রদান করে ডাটাবেজ বাস্তবায়ন করা হয়।


ডাটাবেজ সিস্টেমগুলোকে সাধারণত দুই শ্রেণিতে ভাগ করা হয়।
* Relational Database Management System
* NoSQL


NoSQL বা Not Only SQL হল এক ধরণের ডাটাবেজ সিস্টেম যা বিশাল পরিমাণ ডাটা (Big Data) অনেক দক্ষতার সাথে ব্যবস্থাপনা করতে পারে।


NoSQL ধরণের একটি ডাটাবেজ এর উদাহরণ হল MongoDB। এটি ওপেন সোর্স NoSQL ডাটাবেজ প্রোগ্রাম।
বিস্তারিত  mongodb.txt ফাইলে। 